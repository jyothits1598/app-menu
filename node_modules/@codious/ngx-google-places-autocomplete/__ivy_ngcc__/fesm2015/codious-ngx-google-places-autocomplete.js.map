{"version":3,"file":"codious-ngx-google-places-autocomplete.js","sources":["../../../ngx-google-places-autocomplete/lib/ngx-google-places-autocomplete.config.ts","../../../ngx-google-places-autocomplete/lib/ngx-google-places-autocomplete.control-value-accessor.ts","../../../ngx-google-places-autocomplete/lib/ngx-google-places-autocomplete.component.ts","../../../ngx-google-places-autocomplete/lib/ngx-google-places-autocomplete.pipe.ts","../../../ngx-google-places-autocomplete/lib/ngx-google-places-autocomplete.module.ts","../../../ngx-google-places-autocomplete/codious-ngx-google-places-autocomplete.ts"],"names":[],"mappings":"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","sourcesContent":["import { InjectionToken } from '@angular/core';\n\nexport const NGX_GOOGLE_PLACES_AUTOCOMPLETE_CONFIG = new InjectionToken('NGX_GOOGLE_PLACES_AUTOCOMPLETE_CONFIG');\n\nexport interface NgxGooglePlacesAutocompleteConfig {\n  key: string;\n  language: string;\n  libraries: string;\n  loadScript?: boolean;\n  options?: any;\n  region: string;\n}","import { Injector, Input, ViewChild } from '@angular/core';\nimport { AbstractControl, ControlContainer, ControlValueAccessor, FormControl, FormControlDirective } from '@angular/forms';\n\nexport class NgxGooglePlacesAutocompleteControlValueAccessor implements ControlValueAccessor {\n  @Input() public formControl: FormControl;\n  @Input() public formControlName: string;\n\n  @ViewChild(FormControlDirective, { static: true }) public formControlDirective: FormControlDirective;\n\n  constructor(private injector: Injector) {}\n\n  public get control(): AbstractControl {\n    return this.formControl || this.controlContainer.control.get(this.formControlName);\n  }\n\n  public get controlContainer(): ControlContainer {\n    return this.injector.get(ControlContainer);\n  }\n\n  public registerOnChange(fn: any): void {\n    this.formControlDirective.valueAccessor.registerOnChange(fn);\n  }\n\n  public registerOnTouched(fn: any): void {\n    this.formControlDirective.valueAccessor.registerOnTouched(fn);\n  }\n\n  public setDisabledState(isDisabled: boolean): void {\n    this.formControlDirective.valueAccessor.setDisabledState(isDisabled);\n  }\n\n  public writeValue(obj: any): void {\n    this.formControlDirective.valueAccessor.writeValue(obj);\n  }\n}","import { ChangeDetectorRef, Component, ElementRef, EventEmitter, Inject, Injector, Input, Output } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\n\nimport { NGX_GOOGLE_PLACES_AUTOCOMPLETE_CONFIG, NgxGooglePlacesAutocompleteConfig } from './ngx-google-places-autocomplete.config';\nimport { NgxGooglePlacesAutocompleteControlValueAccessor } from './ngx-google-places-autocomplete.control-value-accessor';\nimport { Prediction } from './ngx-google-places-autocomplete.models';\n\n@Component({\n  providers: [{ provide: NG_VALUE_ACCESSOR, useExisting: NgxGooglePlacesAutocompleteComponent, multi: true }],\n  selector: 'ngx-google-places-autocomplete',\n  templateUrl: './ngx-google-places-autocomplete.component.html'\n})\nexport class NgxGooglePlacesAutocompleteComponent extends NgxGooglePlacesAutocompleteControlValueAccessor {\n  private service: google.maps.places.AutocompleteService;\n\n  public index: number = -1;\n  public predictions: Prediction[] = [];\n  public show: boolean = false;\n\n  @Input() public placeholder: string = 'Enter a location';\n  @Output() public scriptLoaded: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n  constructor(\n    private changeDetectorRef: ChangeDetectorRef,\n    private elementRef: ElementRef,\n    injector: Injector,\n    @Inject(NGX_GOOGLE_PLACES_AUTOCOMPLETE_CONFIG) private ngxGooglePlacesAutocompleteConfig: NgxGooglePlacesAutocompleteConfig\n  ) {\n    super(injector);\n    this.initialize().then(() => this.service = new google.maps.places.AutocompleteService());\n  }\n\n  public onBlur(): void {\n    this.reset(true);\n  }\n\n  public onClick(): void {\n    this.control.setValue(null);\n  }\n\n  public onFocus(): void {\n    this.reset(true, true);\n  }\n\n  public onKeyDown(event: KeyboardEvent): void {\n    if (!this.show) return;\n    switch (event.key) {\n      case 'ArrowDown': this.index += 1; if (this.index >= this.predictions.length) this.index = this.predictions.length - 1; break;\n      case 'ArrowUp': this.index -= 1; if (this.index < 0) this.index = 0; break;\n      case 'Escape': this.reset(true); break;\n      case 'Enter': this.index !== -1 ? this.onMouseDown(this.predictions[this.index]) : this.reset(true); break;\n    }\n  }\n\n  public onModelChange(input: string): void {\n    if (!input) { this.reset(); return; }\n    const request = Object.assign({ input }, this.ngxGooglePlacesAutocompleteConfig.options);\n    this.service.getPlacePredictions(request, (predictions: Prediction[], status: google.maps.places.PlacesServiceStatus) => {\n      if (status !== google.maps.places.PlacesServiceStatus.OK) { this.reset(); return; }\n      this.predictions = predictions;\n      this.show = true;\n      this.changeDetectorRef.detectChanges();\n    });\n  }\n\n  public onMouseDown(prediction: Prediction, event?: MouseEvent): void {\n    this.control.setValue(prediction.description, { emitViewToModelChange: false });\n    if (event) this.dispatchEvent(event);\n    this.reset(true);\n  }\n\n  private dispatchEvent(event: MouseEvent): void {\n    let customEvent: CustomEvent;\n    if (window.CustomEvent) {\n      customEvent = new CustomEvent('submit', { bubbles: true, cancelable: true, detail: event });\n    } else {\n      customEvent = document.createEvent('CustomEvent');\n      customEvent.initCustomEvent('submit', true, true, { data: event });\n    }\n    this.elementRef.nativeElement.firstElementChild.firstElementChild.form.dispatchEvent(customEvent);\n  }\n\n  private async initialize(): Promise<void> {\n    if (window.google?.maps) return new Promise((resolve) => resolve());\n    return new Promise((resolve, reject) => {\n      window['ngxGooglePlacesAutocompleteCallback'] = () => { this.scriptLoaded.emit(true); resolve(); };\n      const script = document.createElement('script');\n      script.async = true;\n      script.defer = true;\n      script.onerror = (err) => reject(err);\n      script.src = `https://maps.googleapis.com/maps/api/js?callback=ngxGooglePlacesAutocompleteCallback&key=${this.ngxGooglePlacesAutocompleteConfig.key}&language=${this.ngxGooglePlacesAutocompleteConfig.language}&libraries=${this.ngxGooglePlacesAutocompleteConfig.libraries}&region=${this.ngxGooglePlacesAutocompleteConfig.region}`;\n      script.type = 'text/javascript';\n      document.body.appendChild(script);\n    });\n  }\n\n  private reset(keep: boolean = false, show: boolean = false): void {\n    this.index = -1;\n    if (!keep) this.predictions = [];\n    this.show = show && this.predictions.length > 0;\n  }\n}","import { Pipe, PipeTransform } from '@angular/core';\n\nimport { Prediction } from './ngx-google-places-autocomplete.models';\n\n@Pipe({ name: 'highlight' })\nexport class NgxGooglePlacesAutocompletePipe implements PipeTransform {\n  public transform(predictions: Prediction[]): Prediction[] {\n    for (const prediction of predictions) {\n      prediction.innerHTML = prediction.description;\n      for (let i = 0; i < prediction.matched_substrings?.length; i += 1) {\n        const offset = prediction.matched_substrings[i].offset + i * 17;\n        const length = prediction.matched_substrings[i].length + offset;\n        prediction.innerHTML =\n          `${prediction.innerHTML.slice(0, offset)}<strong>${prediction.innerHTML.slice(offset, length)}</strong>${prediction.innerHTML.slice(length)}`;\n      }\n    }\n    return predictions;\n  }\n}","import { CommonModule } from '@angular/common';\nimport { ModuleWithProviders, NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { NgxGooglePlacesAutocompleteComponent } from './ngx-google-places-autocomplete.component';\nimport { NGX_GOOGLE_PLACES_AUTOCOMPLETE_CONFIG, NgxGooglePlacesAutocompleteConfig } from './ngx-google-places-autocomplete.config';\nimport { NgxGooglePlacesAutocompletePipe } from './ngx-google-places-autocomplete.pipe';\n\n@NgModule({\n  declarations: [NgxGooglePlacesAutocompleteComponent, NgxGooglePlacesAutocompletePipe],\n  exports: [NgxGooglePlacesAutocompleteComponent],\n  imports: [CommonModule, ReactiveFormsModule]\n})\nexport class NgxGooglePlacesAutocompleteModule {\n  public static forRoot(ngxGooglePlacesAutocompleteConfig: NgxGooglePlacesAutocompleteConfig): ModuleWithProviders<NgxGooglePlacesAutocompleteModule> {\n    return {\n      ngModule: NgxGooglePlacesAutocompleteModule,\n      providers: [{ provide: NGX_GOOGLE_PLACES_AUTOCOMPLETE_CONFIG, useValue: ngxGooglePlacesAutocompleteConfig }]\n    };\n  }\n}","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n\nexport {NgxGooglePlacesAutocompleteControlValueAccessor as ɵa} from './lib/ngx-google-places-autocomplete.control-value-accessor';\nexport {NgxGooglePlacesAutocompletePipe as ɵb} from './lib/ngx-google-places-autocomplete.pipe';"]}